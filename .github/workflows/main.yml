name: CI/CD Pipeline

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [16.x]
        php-version: [8.0]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Set up Node.js for frontend build
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install frontend dependencies
        working-directory: frontend
        run: npm install

      - name: Run frontend tests
        working-directory: frontend
        run: npm test

      - name: Build frontend
        working-directory: frontend
        run: npm run build

      # Set up PHP and Composer for backend
      - name: Set up PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-version }}

      - name: Install Composer dependencies
        working-directory: happycloud
        run: composer install --no-interaction --prefer-dist --optimize-autoloader

      - name: Copy .env file
        working-directory: happycloud
        run: cp .env.example .env

      - name: Generate application key
        working-directory: happycloud
        run: php artisan key:generate

      - name: Run backend tests
        working-directory: happycloud
        run: php artisan test

      - name: Build and deploy
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USER: ${{ secrets.SSH_USER }}
          SSH_PORT: ${{ secrets.SSH_PORT }}

        run: |
          echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh

          # Deploy backend
          rsync -avz -e "ssh -p $SSH_PORT" --exclude=node_modules --exclude=.env happycloud/ $SSH_USER@$SSH_HOST:/path/to/backend

          # Deploy frontend
          rsync -avz -e "ssh -p $SSH_PORT" --exclude=node_modules --exclude=.env frontend/build/ $SSH_USER@$SSH_HOST:/path/to/frontend

          # Run migrations and other necessary commands on the server
          ssh -p $SSH_PORT $SSH_USER@$SSH_HOST "
            cd /path/to/backend &&
            php artisan migrate --force &&
            php artisan config:cache &&
            php artisan route:cache &&
            php artisan view:cache
          "
